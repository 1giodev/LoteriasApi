// <auto-generated />
using System;
using Loterias.Infra.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loterias.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220606050917_CorrigirNomeDeColunaAdicionarColunasNovasConcursoResultado")]
    partial class CorrigirNomeDeColunaAdicionarColunasNovasConcursoResultado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Loterias.Infra.Data.Model.Concurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataProximoConcurso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSorteio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusConcurso")
                        .HasColumnType("int");

                    b.Property<int>("TipoConcurso")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAcumulado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorArrecadado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorSorteado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Concurso");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.ConcursoDadosBruto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcursoApi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcursoPlanilha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Processado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoConcurso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConcursoDadosBruto");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.ConcursoLocalidade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ConcursoId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("ConcursoLocalidade");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IbgeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UfId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UfId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Premiacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcursoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ganhadores")
                        .HasColumnType("int");

                    b.Property<int>("Pontos")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPagoPorGanhador")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPagoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConcursoId");

                    b.ToTable("Premiacao");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.PremiacaoLocalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcursoId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConcursoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("PremiacaoLocalidade");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ConcursoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.ResultadoNumeroSorteado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("ResultadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoId");

                    b.ToTable("ResultadoNumeroSorteado");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Uf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IbgeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uf");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.ConcursoLocalidade", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Concurso", "Concurso")
                        .WithOne("ConcursoLocalidade")
                        .HasForeignKey("Loterias.Infra.Data.Model.ConcursoLocalidade", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loterias.Infra.Data.Model.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concurso");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Municipio", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Uf", "Uf")
                        .WithMany()
                        .HasForeignKey("UfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Premiacao", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Concurso", "Concurso")
                        .WithMany("Premiacao")
                        .HasForeignKey("ConcursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concurso");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.PremiacaoLocalidade", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Concurso", "Concurso")
                        .WithMany("PremiacaoLocalidade")
                        .HasForeignKey("ConcursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loterias.Infra.Data.Model.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concurso");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Resultado", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Concurso", "Concurso")
                        .WithOne("Resultado")
                        .HasForeignKey("Loterias.Infra.Data.Model.Resultado", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concurso");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.ResultadoNumeroSorteado", b =>
                {
                    b.HasOne("Loterias.Infra.Data.Model.Resultado", "Resultado")
                        .WithMany("NumeroSorteado")
                        .HasForeignKey("ResultadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Concurso", b =>
                {
                    b.Navigation("ConcursoLocalidade")
                        .IsRequired();

                    b.Navigation("Premiacao");

                    b.Navigation("PremiacaoLocalidade");

                    b.Navigation("Resultado")
                        .IsRequired();
                });

            modelBuilder.Entity("Loterias.Infra.Data.Model.Resultado", b =>
                {
                    b.Navigation("NumeroSorteado");
                });
#pragma warning restore 612, 618
        }
    }
}
